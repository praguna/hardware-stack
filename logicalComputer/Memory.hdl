// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

    // Match memory address 0110...0
    MatchLast(a=address,out=lastmatch);
    //And all bits
    Andall(a=lastmatch,out=c1);

    //condition for screen
    Not(in=c1,out=nc1);
    And(a=nc1,b=address[14],out=s1);
    And(a=s1,b=load,out=c2);

    //condition for RAM
    Not(in=address[14],out=n14);
    And(a=n14,b=n14,out=r1);
    And(a=r1,b=load,out=c3);

    //memory stack
    RAM16K(in=in,address=address[0..13],load=c3,out=o1);
    Screen(in=in,address=address[0..12],load=c2,out=o2);
    Keyboard(out=o3);

    Mux16(a=o1,b=o2,sel=address[14],out=z);
    Mux16(a=z,b=o3,sel=c1,out=out);
}